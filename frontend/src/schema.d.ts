/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/status": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Returns the SpaceTraders API status. */
        get: operations["status"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        Announcement: {
            body: string;
            title: string;
        };
        ApiStatus: {
            announcements: components["schemas"]["Announcement"][];
            description: string;
            leaderboards: components["schemas"]["Leaderboards"];
            links: components["schemas"]["Link"][];
            resetDate: string;
            serverResets: components["schemas"]["ServerResets"];
            stats: components["schemas"]["GameStats"];
            status: string;
            version: string;
        };
        GameStats: {
            /** Format: int64 */
            agents: number;
            /** Format: int64 */
            ships: number;
            /** Format: int64 */
            systems: number;
            /** Format: int64 */
            waypoints: number;
        };
        LeaderboardAgentCharts: {
            agentSymbol: string;
            /** Format: int64 */
            chartCount: number;
        };
        LeaderboardAgentCredits: {
            agentSymbol: string;
            /** Format: int64 */
            credits: number;
        };
        Leaderboards: {
            mostCredits: components["schemas"]["LeaderboardAgentCredits"][];
            mostSubmittedCharts: components["schemas"]["LeaderboardAgentCharts"][];
        };
        Link: {
            name: string;
            url: string;
        };
        ServerResets: {
            frequency: string;
            next: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    status: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ApiStatus"];
                };
            };
        };
    };
}
